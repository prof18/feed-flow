name: macOS Release

on:
  workflow_call:
    secrets:
      GRADLE_CACHE_ENCRYPTION_KEY:
        required: true
      DROPBOX_API_KEY:
        required: true
      SENTRY_DNS:
        required: true
      MAC_APP_DISTRIBUTION_INSTALLER_CERTIFICATE:
        required: true
      MAC_APP_DISTRIBUTION_INSTALLER_CERTIFICATE_PWD:
        required: true
      EMBEDDED_PROVISION:
        required: true
      RUNTIME_PROVISION:
        required: true
      APPSTORE_ISSUER_ID:
        required: true
      APPSTORE_KEY_ID:
        required: true
      APPSTORE_PRIVATE_KEY:
        required: true
      APPLE_ID_NOTARIZATION:
        required: true
      NOTARIZATION_PWD:
        required: true
      APPSTORE_TEAM_ID:
        required: true

jobs:
  deploy:
    runs-on: macos-latest
    outputs:
      release_path: ${{ steps.path_variables.outputs.release_path }}
      artifact_name: ${{ steps.path_variables.outputs.artifact_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: ./.github/actions/setup-gradle
        with:
          gradle-cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}

      - name: Import Mac App Distribution and Installer certificate
        uses: apple-actions/import-codesign-certs@v5
        with:
          p12-file-base64: ${{ secrets.MAC_APP_DISTRIBUTION_INSTALLER_CERTIFICATE }}
          p12-password: ${{ secrets.MAC_APP_DISTRIBUTION_INSTALLER_CERTIFICATE_PWD }}

      - name: Create Embedded Provision Profile
        run: |
          echo "$EMBEDDED_PROVISION" > desktopApp/embedded.provisionprofile.b64
          base64 -d -i desktopApp/embedded.provisionprofile.b64 > desktopApp/embedded.provisionprofile
        env:
          EMBEDDED_PROVISION: ${{ secrets.EMBEDDED_PROVISION }}

      - name: Create Runtime Provision Profile
        run: |
          echo "$RUNTIME_PROVISION" > desktopApp/runtime.provisionprofile.b64
          base64 -d -i desktopApp/runtime.provisionprofile.b64 > desktopApp/runtime.provisionprofile
        env:
          RUNTIME_PROVISION: ${{ secrets.RUNTIME_PROVISION }}

      - name: Update Licenses file
        run: ./gradlew desktopApp:exportLibraryDefinitions -PaboutLibraries.exportPath=src/main/resources/

      - name: Read version from properties
        id: version
        run: |
          MAJOR=$(grep "MAJOR=" version.properties | cut -d'=' -f2)
          MINOR=$(grep "MINOR=" version.properties | cut -d'=' -f2)
          PATCH=$(grep "PATCH=" version.properties | cut -d'=' -f2)
          VERSION="$MAJOR.$MINOR.$PATCH"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Create path variables
        id: path_variables
        run: |
          name="FeedFlow-${VERSION}.pkg"
          path="desktopApp/build/release/main-release/pkg/${name}"
          echo "release_path=$path" >> $GITHUB_OUTPUT
          echo "artifact_name=$name" >> $GITHUB_OUTPUT
          echo "RELEASE_PATH=$path" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV
        env:
          VERSION: ${{ steps.version.outputs.version }}

      - name: Create Properties file
        run: |
          echo "is_release=true" >> desktopApp/src/jvmMain/resources/props.properties
          echo "sentry_dns=$SENTRY_DNS" >> desktopApp/src/jvmMain/resources/props.properties
          echo "version=$VERSION" >> desktopApp/src/jvmMain/resources/props.properties
          echo "dropbox_key=$DROPBOX_API_KEY" >> desktopApp/src/jvmMain/resources/props.properties
        env:
          SENTRY_DNS: ${{ secrets.SENTRY_DNS }}
          VERSION: ${{ inputs.version }}
          DROPBOX_API_KEY: ${{ secrets.DROPBOX_API_KEY }}

      - name: Create PKG
        run: ./gradlew packageReleasePkg -PmacOsAppStoreRelease=true

      - name: Upload reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/compose/logs/*  

      - uses: Apple-Actions/upload-testflight-build@v3
        with:
          app-type: 'osx'
          app-path: ${{ env.RELEASE_PATH }}
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
