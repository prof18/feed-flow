import kotlin.Int;

CREATE TABLE feed_source (
    url_hash TEXT NOT NULL PRIMARY KEY,
    url TEXT NOT NULL,
    title TEXT NOT NULL,
    category_id TEXT,
    last_sync_timestamp INTEGER,
    logo_url TEXT
);

insertFeedSource:
INSERT OR REPLACE INTO feed_source(url_hash, url, title, category_id, logo_url)
VALUES (?,?,?,?, ?);

deleteAllExcept:
DELETE FROM feed_source WHERE url_hash NOT IN :urlHashes;

selectFeedUrls:
SELECT feed_source.url, feed_source.url_hash, feed_source.title AS feed_source_title, feed_source.last_sync_timestamp, feed_source_category.id AS category_id, feed_source_category.title AS category_title, feed_source.logo_url AS feed_source_logo_url FROM feed_source
LEFT JOIN feed_source_category
ON feed_source.category_id = feed_source_category.id
ORDER BY feed_source.title COLLATE NOCASE ASC;

deleteFeedSource:
DELETE FROM feed_source WHERE url_hash = :urlHash;

updateLastSyncTimestamp:
UPDATE feed_source
SET last_sync_timestamp = :lastSyncTimestamp
WHERE url_hash = :urlHash;

deleteAllLastSync:
UPDATE feed_source
SET last_sync_timestamp = NULL;

resetCategory:
UPDATE feed_source
SET category_id = NULL
WHERE category_id = :categoryId;

updateFeedSourceTitle:
UPDATE feed_source
SET title = :title
WHERE url_hash = :urlHash;

updateFeedSource:
UPDATE feed_source
SET url = :url, title = :title, category_id = :categoryId
WHERE url_hash = :urlHash;

selectAllUrlHashes:
SELECT url_hash FROM feed_source;

deleteAll:
DELETE FROM feed_source;

selectByCategory:
SELECT feed_source.url, feed_source.url_hash, feed_source.title AS feed_source_title, feed_source.last_sync_timestamp, feed_source_category.id AS category_id, feed_source_category.title AS category_title, feed_source.logo_url AS feed_source_logo_url FROM feed_source
LEFT JOIN feed_source_category
ON feed_source.category_id = feed_source_category.id
WHERE feed_source.category_id = :categoryId;