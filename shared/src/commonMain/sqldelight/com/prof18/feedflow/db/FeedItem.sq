import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE feed_item (
    url_hash INTEGER AS Int NOT NULL PRIMARY KEY,
    url TEXT NOT NULL,
    title TEXT,
    subtitle TEXT,
    content TEXT,
    image_url TEXT,
    feed_source_id INTEGER AS Int NOT NULL,
    is_read INTEGER AS Boolean NOT NULL DEFAULT 0,
    is_new INTEGER AS Boolean NOT NULL DEFAULT 1,
    pub_date INTEGER,
    comments_url TEXT
);

insertFeedItem:
INSERT OR IGNORE INTO feed_item(url_hash, url, title, subtitle, content, image_url, feed_source_id, pub_date, comments_url)
VALUES (?,?,?,?,?,?,?,?, ?);

selectFeeds:
SELECT feed_item.url_hash, feed_item.url, feed_item.title, subtitle, image_url, pub_date, is_read, comments_url, feed_source.title AS feed_source_title, feed_source.url_hash AS feed_source_id, feed_source.url AS feed_source_url, feed_source.last_sync_timestamp AS feed_source_last_sync_timestamp FROM feed_item
INNER JOIN feed_source
ON feed_item.feed_source_id == feed_source.url_hash
WHERE is_new = 1
ORDER BY pub_date DESC;

updateReadStatus:
UPDATE feed_item
SET is_read = 1
WHERE url_hash = ?;

updateNewStatus:
UPDATE feed_item
SET is_new = 0
WHERE is_read = 1;

markAllRead:
UPDATE feed_item
SET is_read = 1
WHERE is_read = 0;

clearOldItems:
DELETE FROM feed_item
WHERE pub_date < :threshold;


deleteAll:
DELETE FROM feed_item;

deleteAllWithFeedSource:
DELETE FROM feed_item
WHERE feed_source_id = :feedSourceId;